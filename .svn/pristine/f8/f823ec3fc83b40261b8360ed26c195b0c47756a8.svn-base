package com.gpdi.hqplus.property.controller.web;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.gpdi.hqplus.common.constants.ErrorCode;
import com.gpdi.hqplus.common.constants.RabbitMqQueue;
import com.gpdi.hqplus.common.exception.ApplicationException;
import com.gpdi.hqplus.common.manager.MQService;
import com.gpdi.hqplus.common.validate.PageQueryValidate;
import com.gpdi.hqplus.property.entity.query.PropertyMaintainListQuery;
import com.gpdi.hqplus.property.entity.vo.PropertyMainTainApplyVo;
import com.gpdi.hqplus.property.entity.vo.PropertyMaintainListVO;
import com.gpdi.hqplus.property.entity.vo.PropertyMaintainVO;
import com.gpdi.hqplus.property.service.IPropertyService;
import com.gpdi.hqplus.resources.entity.PropertyMaintenanceApply;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * @author: lianghb
 * @create: 2019-07-09 16:32
 **/
@Api
@Slf4j
@RestController
@RequestMapping("/v1/manager/resources/property")
public class PropertyMaintainManagerController {

    @Autowired
    private IPropertyService propertyService;

    @Autowired
    private MQService mqService;

    /**
     * <p>
     * 分页获取物业报修记录
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "分页获取物业报修记录", notes = "分页获取物业报修记录")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "current", value = "当前页", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "size", value = "每页记录数", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "address", value = "姓名", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "type", value = "联系方式", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "dealUserName", value = "留言", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "status", value = "文件名称列表", required = true, dataType = "string[]", paramType = "path"),
            @ApiImplicitParam(name = "applyStartTime", value = "文件名称列表", required = true, dataType = "string[]", paramType = "path"),
            @ApiImplicitParam(name = "applyEndTime", value = "文件名称列表", required = true, dataType = "string[]", paramType = "path"),
            @ApiImplicitParam(name = "completeStartTime", value = "文件名称列表", required = true, dataType = "string[]", paramType = "path"),
            @ApiImplicitParam(name = "completeEndTime", value = "文件名称列表", required = true, dataType = "string[]", paramType = "path")
    })
    @PostMapping("/pageAll")
    public Page<PropertyMaintainListVO> apply(@RequestBody PropertyMaintainListQuery query) {
        PageQueryValidate.check(query);
        return propertyService.pageAll(query);
    }

    /**
     * <p>
     * 根据id获取物业报修记录
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "根据id获取物业报修记录", notes = "根据id获取物业报修记录")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "id", required = true, dataType = "string", paramType = "path")
    })
    @GetMapping("/byId")
    public PropertyMaintainListVO getById(Long id) {
        return propertyService.getListVOById(id);
    }


    /**
     * <p>
     * 物业师傅提交
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "物业师傅提交", notes = "物业师傅提交")
    @PostMapping("/propertySuccess")
    public PropertyMaintenanceApply propertyApply(PropertyMainTainApplyVo vo) {
        return propertyService.success(vo);
    }

    /**
     * <p>
     * 物业师傅拒绝维修
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "物业师傅拒绝维修", notes = "物业师傅拒绝维修")
    @GetMapping("/propertyFail")
    public String propertyFail(String id) {
        propertyService.fail(id);
        return "ok";
    }

    /**
     * <p>
     * 维修审核通过
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "维修审核通过", notes = "维修审核通过")
    @GetMapping("/propertyAuditSuccess")
    public PropertyMaintenanceApply propertyAuditSuccess(String id) {
        return propertyService.audit(id);
    }

    /**
     * <p>
     * 维修审核不通过
     * </p>
     *
     * @return
     */
    @ApiOperation(value = "维修审核不通过", notes = "维修审核不通过")
    @GetMapping("/propertyAuditFail")
    public String propertyAuditFail(String id) {
        propertyService.auditFail(id);
        return "ok";
    }
}
