package com.gpdi.hqplus.apartment.controller.manager;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.gpdi.hqplus.apartment.entity.params.ApartmentParams;
import com.gpdi.hqplus.apartment.entity.query.ApartmentQuery;
import com.gpdi.hqplus.apartment.entity.vo.ApartmentBookVO;
import com.gpdi.hqplus.apartment.service.ApartmentBookService;
import com.gpdi.hqplus.apartment.service.ApartmentService;
import com.gpdi.hqplus.apartment.service.RoomService;
import com.gpdi.hqplus.resources.constants.EquipmentCode;
import com.gpdi.hqplus.resources.entity.PropertyEquipment;
import com.gpdi.hqplus.resources.service.IPropertyEquipmentService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * @Description 公寓web端服务
 * @Author wzr
 * @CreateDate 2019-07-05
 * @Time 18:31
 */
@Api(tags = "停车场月卡web接口")
@Slf4j
@RestController
@RequestMapping("/v1/manager/resources/apartment")
public class ApartmentManagerController {

    @Autowired
    ApartmentService apartmentService;

    @Autowired
    ApartmentBookService apartmentBookService;

    @Autowired
    RoomService roomService;

    @Autowired
    IPropertyEquipmentService equipmentService;

    @ApiOperation(value = "分页查询公寓列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "size", value = "每页显示数", required = true, dataType = "long", paramType = "path"),
            @ApiImplicitParam(name = "current", value = "当前页", required = true, dataType = "long", paramType = "path"),
            @ApiImplicitParam(name = "records", value = "如果有查询参数，该值为json数组，具体查询参数放在第一个对象内", required = false, dataType = "JsonArray", paramType = "path")
    })
    @PostMapping("/searchByPage")
    public Page searchByPage(@RequestBody Page<ApartmentQuery> page){
        return apartmentService.searchApartmentByPage(page);
    }

    @ApiOperation(value = "新增公寓")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "name", value = "公寓名称", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "description", value = "公寓简介", required = false, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "roomIds", value = "公寓房型", required = false, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "pictures", value = "公寓图片列表", required = true, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "equipmentIds", value = "公寓设备列表", required = true, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "minPrice", value = "公寓最低租价", required = false, dataType = "Decimal", paramType = "path"),
            @ApiImplicitParam(name = "maxPrice", value = "公寓最高租价", required = false, dataType = "Decimal", paramType = "path")
    })
    @PostMapping("/add")
    public void add(@RequestBody ApartmentParams apartmentParams){
        //根据房型id列表查询
        apartmentService.addApartment(apartmentParams);
    }

    @ApiOperation(value = "编辑公寓")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "公寓id", required = true, dataType = "long", paramType = "path"),
            @ApiImplicitParam(name = "name", value = "公寓名称", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "description", value = "公寓简介", required = false, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "roomIds", value = "公寓房型", required = false, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "pictures", value = "公寓图片列表", required = true, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "equipments", value = "公寓设备列表", required = true, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "minPrice", value = "公寓最低租价", required = false, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "maxPrice", value = "公寓最高租价", required = false, dataType = "String", paramType = "path")
    })
    @PostMapping("/edit")
    public void edit(@RequestBody ApartmentParams apartmentParams){
        apartmentService.editApartment(apartmentParams);
    }

    @ApiOperation(value = "删除公寓")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "公寓id", required = true, dataType = "long", paramType = "path"),
            @ApiImplicitParam(name = "name", value = "公寓名称", required = false, dataType = "String", paramType = "path")
    })
    @PostMapping("/delete")
    public void delete(@RequestBody ApartmentParams apartmentParams){
        apartmentService.deleteApartment(apartmentParams);
    }

    @ApiOperation(value = "分页查询公寓预约看房列表")
    @PostMapping("/listBookRecordsByPage")
    public Page listBookRecordsByPage(Page<ApartmentBookVO> page){
        return apartmentBookService.listApartmentBookByApartmentIdAndPage(page);
    }

    @ApiOperation(value = "查询公寓所有设备列表")
    @PostMapping("/listApartmentEquip")
    public List<PropertyEquipment> listApartmentEquip(){
        return equipmentService.listByCode(EquipmentCode.APARTMENT_EQUIP);
    }
}
