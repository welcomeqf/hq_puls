package com.gpdi.hqplus.article.controller.web;

import com.gpdi.hqplus.article.entity.vo.RegistrationAgreementVO;
import com.gpdi.hqplus.article.service.IRegistrationAgreementService;
import com.gpdi.hqplus.common.validate.ObjectValidate;
import com.gpdi.hqplus.common.validate.StringValidate;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * 注册协议
 * @Author: hmx
 * @CreateDate: 2019/07/17 14:32
 */
@Api
@Slf4j
@RestController
@RequestMapping("/v1/web/resources/article/registration")
public class RegistrationAgreementManagerController {
	@Autowired
	private IRegistrationAgreementService agreementService;

	/**
	 * 获取注册协议富文本内容
	 * @return RegistrationAgreementVO
	 */
	@GetMapping("/detail")
	@ApiOperation(value = "获取注册协议富文本内容", notes = "获取注册协议富文本内容")
	@ApiImplicitParams({})
	public RegistrationAgreementVO getRegistrationAgreementVO(){
		return agreementService.getDetail();
	}

	/**
	 * 保存注册协议
	 * @param vo
	 * @return
	 */
	@PostMapping("/save")
	@ApiOperation(value = "获取注册协议富文本内容", notes = "获取注册协议富文本内容")
	@ApiImplicitParams({
			@ApiImplicitParam(name = "title", value = "注册协议标题", required = false, dataType = "string", paramType = "path"),
			@ApiImplicitParam(name = "description", value = "注册协议描述", required = false, dataType = "string", paramType = "path"),
			@ApiImplicitParam(name = "context", value = "注册协议内容", required = true, dataType = "string", paramType = "path"),
			@ApiImplicitParam(name = "id", value = "注册协议id", required = false, dataType = "long", paramType = "path")
	})
	public String saveRegistrationAgreement(@RequestBody RegistrationAgreementVO vo){
		StringValidate.requireNotBlank(vo.getContext(), "公告内容不能为空");
		return agreementService.saveRegistrationAgreement(vo);
	}

}
