package com.gpdi.hqplus.pay.controller.wechat;


import com.gpdi.hqplus.common.constants.ErrorCode;
import com.gpdi.hqplus.common.exception.ApplicationException;
import com.gpdi.hqplus.common.manager.MQService;
import com.gpdi.hqplus.common.validate.StringValidate;
import com.gpdi.hqplus.pay.entity.WechatPayVo;
import com.gpdi.hqplus.pay.service.constans.PayRabbitMqConfig;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;

import java.math.BigDecimal;

/**
 *
 * @author lianghb
 * @since 2019-07-02
 */
@RestController
@RequestMapping("/v1/app/wechat/pay")
@Slf4j
public class WepayBillController {
    @Autowired
    private MQService mqService;

    @ApiOperation(value = "微信支付生成预付单")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "username", value = "姓名", required = true, dataType = "String", paramType = "query"),
            @ApiImplicitParam(name = "address", value = "申请人地址", dataType = "String", required = true, paramType = "query"),
            @ApiImplicitParam(name = "remark", value = "备注", dataType = "String", required = false, paramType = "query"),
            @ApiImplicitParam(name = "phoneNumber", value = "联系方式", dataType = "String", required = false, paramType = "query")
    })
    @PostMapping("/prepareId")
    public String prepareId(@RequestBody WechatPayVo payVo) {
        StringValidate.requireNotBlank(payVo.getOrderId(), "公司业务订单号不能为空");
        StringValidate.requireNotBlank(payVo.getIpAddress(), "客户端APPip地址不能为空");
        StringValidate.requireNotBlank(payVo.getBody(), "商品或支付单简要描述");
        BigDecimal price = payVo.getPrice();
        if (price == null){
            throw new RuntimeException("商品价格不能为空");
        }
        boolean sendObject = mqService.sendObject(PayRabbitMqConfig.WECHAT_FOR_PREPARE_ID, payVo);
        if (!sendObject) {
            log.error("send property maintenance apply 2 mq fail.");
           throw new ApplicationException(ErrorCode.SERVICE_ERROR, "物品放行提交申请失败，请稍后再试");
       }
        return "ok";
    }

}

